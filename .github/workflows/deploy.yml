name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.14.4

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run typecheck
        run: pnpm typecheck

      - name: Run linting
        run: pnpm lint

      - name: Build packages
        run: pnpm build:packages

      - name: Build web-booking app
        run: pnpm --filter @dc-beauty/web-booking build

      - name: Build web-crm app
        run: pnpm --filter @dc-beauty/web-crm build

      - name: Create combined deployment structure
        run: |
          mkdir -p deploy
          
          # Copy web-booking files to root
          if [ -d "apps/web-booking/dist" ]; then
            cp -r apps/web-booking/dist/* deploy/
          fi
          
          # Copy web-crm files to /crm/ subdirectory
          mkdir -p deploy/crm
          if [ -d "apps/web-crm/dist" ]; then
            cp -r apps/web-crm/dist/* deploy/crm/
          fi
          
          # Create 404.html for CRM SPA routing
          if [ -f "deploy/crm/index.html" ]; then
            cp deploy/crm/index.html deploy/crm/404.html
          fi
          
          # Create simple root 404.html for GitHub Pages SPA routing
          cat > deploy/404.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="utf-8">
            <title>Beauty Platform - Redirecting...</title>
            <script type="text/javascript">
              // GitHub Pages SPA routing hack
              var pathSegmentsToKeep = 1;
              var l = window.location;
              
              // Store the path for later restoration
              var path = l.pathname.slice(1).split('/').slice(pathSegmentsToKeep).join('/');
              if (path) {
                sessionStorage.redirect = l.pathname + l.search + l.hash;
              }
              
              // Redirect to the correct app
              if (l.pathname.startsWith('/beauty/crm')) {
                l.replace(l.protocol + '//' + l.hostname + (l.port ? ':' + l.port : '') + '/beauty/crm/');
              } else {
                l.replace(l.protocol + '//' + l.hostname + (l.port ? ':' + l.port : '') + '/beauty/');
              }
            </script>
          </head>
          <body>
            <p>Redirecting...</p>
          </body>
          </html>
          EOF
          
          # Create main index.html
          cat > deploy/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Beauty Platform</title>
            <meta http-equiv="refresh" content="2; url=/beauty/demo-salon">
            <style>
              body { 
                font-family: system-ui, sans-serif; 
                text-align: center; 
                padding: 2rem; 
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); 
                color: white; 
                min-height: 100vh; 
                display: flex; 
                align-items: center; 
                justify-content: center; 
                margin: 0; 
              }
              .container { max-width: 600px; }
              .logo { font-size: 3rem; margin-bottom: 1rem; }
              .links a { 
                display: inline-block; 
                margin: 0.5rem; 
                padding: 1rem 2rem; 
                background: rgba(255,255,255,0.2); 
                color: white; 
                text-decoration: none; 
                border-radius: 0.5rem; 
                border: 1px solid rgba(255,255,255,0.3);
                transition: all 0.3s ease; 
              }
              .links a:hover { 
                background: rgba(255,255,255,0.3); 
                transform: translateY(-2px); 
              }
              .spinner {
                border: 2px solid rgba(255,255,255,0.3);
                border-radius: 50%;
                border-top: 2px solid white;
                width: 30px;
                height: 30px;
                animation: spin 1s linear infinite;
                margin: 20px auto;
              }
              @keyframes spin {
                0% { transform: rotate(0deg); }
                100% { transform: rotate(360deg); }
              }
            </style>
          </head>
          <body>
            <div class="container">
              <div class="logo">ðŸ’„</div>
              <h1>Beauty Platform</h1>
              <div class="spinner"></div>
              <p>Redirecting to Demo Salon...</p>
              <div class="links">
                <a href="/beauty/demo-salon" onclick="clearTimeout(redirectTimer)">Public Booking</a>
                <a href="/beauty/crm/" onclick="clearTimeout(redirectTimer)">Admin CRM</a>
              </div>
            </div>
            <script>
              var redirectTimer = setTimeout(() => {
                window.location.href = '/beauty/demo-salon';
              }, 2000);
            </script>
          </body>
          </html>
          EOF
          
          # Debug output
          echo "=== Deploy structure ==="
          find deploy -type f | sort
          echo ""
          echo "=== CRM directory ==="
          ls -la deploy/crm/ || echo "CRM directory not found"
          echo ""
          echo "=== Root files ==="
          ls -la deploy/

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: deploy

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
