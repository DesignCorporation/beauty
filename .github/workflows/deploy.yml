name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.14.4

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run typecheck
        run: pnpm typecheck

      - name: Run linting
        run: pnpm lint

      - name: Build packages
        run: pnpm build:packages

      - name: Build web-booking app
        run: pnpm --filter @dc-beauty/web-booking build

      - name: Build web-crm app
        run: pnpm --filter @dc-beauty/web-crm build

      - name: Create combined deployment structure
        run: |
          mkdir -p deploy
          
          # Copy web-booking files to root
          cp -r apps/web-booking/dist/* deploy/
          
          # Copy web-crm files to /crm/ subdirectory
          mkdir -p deploy/crm
          cp -r apps/web-crm/dist/* deploy/crm/
          
          # Create index.html that redirects to demo-salon
          cat > deploy/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Beauty Platform</title>
            <meta http-equiv="refresh" content="0; url=/beauty/demo-salon">
            <style>
              body { font-family: system-ui, sans-serif; text-align: center; padding: 2rem; }
              .container { max-width: 600px; margin: 0 auto; }
              .logo { color: #7c3aed; font-size: 2rem; margin-bottom: 1rem; }
              .links a { display: inline-block; margin: 0.5rem; padding: 0.75rem 1.5rem; 
                         background: #7c3aed; color: white; text-decoration: none; 
                         border-radius: 0.5rem; }
            </style>
          </head>
          <body>
            <div class="container">
              <div class="logo">ðŸ’„ Beauty Platform</div>
              <h1>Redirecting to Demo Salon...</h1>
              <p>If not redirected automatically, choose:</p>
              <div class="links">
                <a href="/beauty/demo-salon">Public Booking</a>
                <a href="/beauty/crm/">Admin CRM</a>
              </div>
            </div>
            <script>
              // Fallback redirect
              setTimeout(() => {
                window.location.href = '/beauty/demo-salon';
              }, 2000);
            </script>
          </body>
          </html>
          EOF
          
          # Create 404.html for SPA routing fallback
          cp deploy/crm/index.html deploy/crm/404.html
          
          # List contents for debugging
          echo "=== Deploy structure ==="
          find deploy -type f | head -20

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: deploy

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
