version: '3.9'

services:
  postgres:
    image: postgres:16-alpine
    container_name: beauty-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: beauty
      POSTGRES_USER: beauty
      POSTGRES_PASSWORD: beauty
    volumes:
      - beauty-pg-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U beauty"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: beauty-redis
    restart: unless-stopped
    ports:
      - "6379:6379"

  adminer:
    image: adminer
    container_name: beauty-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"

  # n8n Workflow Automation Engine
  n8n:
    image: n8nio/n8n:latest
    container_name: beauty-n8n
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    environment:
      # Basic Configuration
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678
      
      # Database Configuration
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=beauty
      - DB_POSTGRESDB_PASSWORD=beauty
      
      # Redis Configuration for Queue
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - EXECUTIONS_MODE=queue
      
      # Security & Features
      - N8N_SECURE_COOKIE=false
      - N8N_METRICS=true
      - N8N_LOG_LEVEL=info
      
      # Beauty Platform Integration
      - BEAUTY_API_URL=http://host.docker.internal:4000
      - BEAUTY_INTERNAL_API_KEY=beauty-n8n-secret-key
      
    ports:
      - "5678:5678"
    volumes:
      - beauty-n8n-data:/home/node/.n8n
      - ./n8n/workflows:/home/node/.n8n/workflows
      - ./n8n/credentials:/home/node/.n8n/credentials
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # TODO: Enable after API is ready
  # api:
  #   build:
  #     context: ../
  #     dockerfile: apps/api/Dockerfile
  #   container_name: beauty-api
  #   restart: unless-stopped
  #   depends_on:
  #     - postgres
  #     - redis
  #   environment:
  #     - DATABASE_URL=postgresql://beauty:beauty@postgres:5432/beauty
  #     - REDIS_URL=redis://redis:6379
  #   ports:
  #     - "4000:4000"

volumes:
  beauty-pg-data:
  beauty-n8n-data:

# Usage:
# docker compose -f docker/docker-compose.dev.yml up -d
# docker compose -f docker/docker-compose.dev.yml down
# n8n Web UI: http://localhost:5678
